{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/i331567/Desktop/learn/React/nextExample/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nfunction MeetupPage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.meetupData.title,\n      image: props.meetupData.image,\n      address: props.meetupData.image,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupPage;\nexport var __N_SSG = true;\nexport default MeetupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupPage\");","map":{"version":3,"sources":["/Users/i331567/Desktop/learn/React/nextExample/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","Fragment","Head","MeetupPage","props","meetupData","title","description","image"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBG,KAF5B;AAGI,MAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBG,KAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBE;AAJlC;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;KAfQJ,U;;AAyDT,eAAeA,UAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nfunction MeetupPage(props) {\n    return (\n        <Fragment>\n            <Head>\n                <title>{props.meetupData.title}</title>\n                <meta name=\"description\" content={props.meetupData.description}></meta>\n            </Head>\n            <MeetupDetail\n                title={props.meetupData.title}\n                image={props.meetupData.image}\n                address={props.meetupData.image}\n                description={props.meetupData.description}\n            />\n        </Fragment>\n    );\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://max:reactguru@cluster0.rb7ry.mongodb.net/meetups?retryWrites=true&w=majority',  {useUnifiedTopology: true });\n    const db = client.db();\n    const collection = db.collection('meetups');\n    const meetups = await collection.find({}, { _id: 1}).toArray();\n    client.close();\n    console.log(meetups);\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({\n            params: {\n                meetupId: meetup._id.toString()\n            }\n        }))\n    }\n}\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n    const client = await MongoClient.connect('mongodb+srv://max:reactguru@cluster0.rb7ry.mongodb.net/meetups?retryWrites=true&w=majority',  {useUnifiedTopology: true });\n    const db = client.db();\n    const collection = db.collection('meetups');\n    const selectedMeetup = await collection.findOne({_id: ObjectId(meetupId)});\n    client.close();\n\n    console.log(meetupId, selectedMeetup);\n    return {\n        props: {\n            meetupData: {\n                title: selectedMeetup.title,\n                id: selectedMeetup._id.toString(),\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description\n            }\n        }\n    };\n}\n\nexport default MeetupPage;"]},"metadata":{},"sourceType":"module"}