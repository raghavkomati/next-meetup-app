{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/i331567/Desktop/learn/React/nextExample/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.title,\n    image: props.image,\n    address: props.image,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://max:reactguru@cluster0.rb7ry.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const collection = db.collection('meetups');\n  const meetups = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      title: 'My first meetup',\n      id: meetupId,\n      image: 'https://picsum.photos/seed/picsum/200/300',\n      address: 'Some Plot, Some Street, 10, Some City - 50000',\n      description: 'This is my first meetup!'\n    }\n  };\n}\nexport default MeetupPage;","map":{"version":3,"sources":["/Users/i331567/Desktop/learn/React/nextExample/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupPage","props","title","image","description","getStaticPaths","client","MongoClient","connect","db","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","id","address"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,KADjB;AAEI,IAAA,KAAK,EAAED,KAAK,CAACE,KAFjB;AAGI,IAAA,OAAO,EAAEF,KAAK,CAACE,KAHnB;AAII,IAAA,WAAW,EAAEF,KAAK,CAACG;AAJvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CAAoB,4FAApB,CAArB;AACA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AACA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAnB;AACA,QAAMC,OAAO,GAAG,MAAMD,UAAU,CAACE,IAAX,CAAgB,EAAhB,EAAoB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAApB,EAA+BC,OAA/B,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADkB,KAAL,CAAlB;AAFJ,GAAP;AAQH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO;AACHpB,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE,iBADJ;AAEHyB,MAAAA,EAAE,EAAEN,QAFD;AAGHlB,MAAAA,KAAK,EAAE,2CAHJ;AAIHyB,MAAAA,OAAO,EAAE,+CAJN;AAKHxB,MAAAA,WAAW,EAAE;AALV;AADJ,GAAP;AASH;AAED,eAAeJ,UAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupPage(props) {\n    return (\n        <MeetupDetail\n            title={props.title}\n            image={props.image}\n            address={props.image}\n            description={props.description}\n        />\n    );\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://max:reactguru@cluster0.rb7ry.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n    const collection = db.collection('meetups');\n    const meetups = await collection.find({}, { _id: 1}).toArray();\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({\n            params: {\n                meetupId: meetup._id.toString()\n            }\n        }))\n    }\n}\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n    console.log(meetupId);\n    return {\n        props: {\n            title: 'My first meetup',\n            id: meetupId,\n            image: 'https://picsum.photos/seed/picsum/200/300',\n            address: 'Some Plot, Some Street, 10, Some City - 50000',\n            description: 'This is my first meetup!'\n        }\n    };\n}\n\nexport default MeetupPage;"]},"metadata":{},"sourceType":"module"}