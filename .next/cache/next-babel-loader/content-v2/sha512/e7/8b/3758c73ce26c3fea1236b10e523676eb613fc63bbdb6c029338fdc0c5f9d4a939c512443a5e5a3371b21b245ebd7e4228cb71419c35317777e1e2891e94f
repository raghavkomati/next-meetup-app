{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/i331567/Desktop/learn/React/nextExample/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from 'mongodb';\n\nfunction MeetupPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.image,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://max:reactguru@cluster0.rb7ry.mongodb.net/meetups?retryWrites=true&w=majority', {\n    useUnifiedTopology: true\n  });\n  const db = client.db();\n  const collection = db.collection('meetups');\n  const meetups = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  console.log(meetups);\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://max:reactguru@cluster0.rb7ry.mongodb.net/meetups?retryWrites=true&w=majority', {\n    useUnifiedTopology: true\n  });\n  const db = client.db();\n  const collection = db.collection('meetups');\n  const selectedMeetup = await collection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  console.log(meetupId, selectedMeetup);\n  return {\n    props: {\n      meetupData: {\n        title: selectedMeetup.title,\n        id: _id.toString(),\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupPage;","map":{"version":3,"sources":["/Users/i331567/Desktop/learn/React/nextExample/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupPage","props","meetupData","title","image","description","getStaticPaths","client","connect","useUnifiedTopology","db","collection","meetups","find","_id","toArray","close","console","log","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id","address"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBE,KAH9B;AAII,IAAA,WAAW,EAAEH,KAAK,CAACC,UAAN,CAAiBG;AAJlC;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,4FAApB,EAAmH;AAACC,IAAAA,kBAAkB,EAAE;AAArB,GAAnH,CAArB;AACA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AACA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAnB;AACA,QAAMC,OAAO,GAAG,MAAMD,UAAU,CAACE,IAAX,CAAgB,EAAhB,EAAoB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAApB,EAA+BC,OAA/B,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AAEA,SAAO;AACHO,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAER,OAAO,CAACS,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACR,GAAP,CAAWW,QAAX;AADN;AADkB,KAAL,CAAlB;AAFJ,GAAP;AAQH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMjB,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,4FAApB,EAAmH;AAACC,IAAAA,kBAAkB,EAAE;AAArB,GAAnH,CAArB;AACA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AACA,QAAMC,UAAU,GAAGD,EAAE,CAACC,UAAH,CAAc,SAAd,CAAnB;AACA,QAAMiB,cAAc,GAAG,MAAMjB,UAAU,CAACkB,OAAX,CAAmB;AAACf,IAAAA,GAAG,EAAEf,QAAQ,CAACyB,QAAD;AAAd,GAAnB,CAA7B;AACAjB,EAAAA,MAAM,CAACS,KAAP;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ,EAAsBI,cAAtB;AACA,SAAO;AACH3B,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAEyB,cAAc,CAACzB,KADd;AAER2B,QAAAA,EAAE,EAAEhB,GAAG,CAACW,QAAJ,EAFI;AAGRM,QAAAA,OAAO,EAAEH,cAAc,CAACG,OAHhB;AAIR3B,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAJd;AAKRC,QAAAA,WAAW,EAAEuB,cAAc,CAACvB;AALpB;AADT;AADJ,GAAP;AAWH;AAED,eAAeL,UAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from 'mongodb';\n\nfunction MeetupPage(props) {\n    return (\n        <MeetupDetail\n            title={props.meetupData.title}\n            image={props.meetupData.image}\n            address={props.meetupData.image}\n            description={props.meetupData.description}\n        />\n    );\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://max:reactguru@cluster0.rb7ry.mongodb.net/meetups?retryWrites=true&w=majority',  {useUnifiedTopology: true });\n    const db = client.db();\n    const collection = db.collection('meetups');\n    const meetups = await collection.find({}, { _id: 1}).toArray();\n    client.close();\n    console.log(meetups);\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({\n            params: {\n                meetupId: meetup._id.toString()\n            }\n        }))\n    }\n}\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n    const client = await MongoClient.connect('mongodb+srv://max:reactguru@cluster0.rb7ry.mongodb.net/meetups?retryWrites=true&w=majority',  {useUnifiedTopology: true });\n    const db = client.db();\n    const collection = db.collection('meetups');\n    const selectedMeetup = await collection.findOne({_id: ObjectId(meetupId)});\n    client.close();\n\n    console.log(meetupId, selectedMeetup);\n    return {\n        props: {\n            meetupData: {\n                title: selectedMeetup.title,\n                id: _id.toString(),\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description\n            }\n        }\n    };\n}\n\nexport default MeetupPage;"]},"metadata":{},"sourceType":"module"}